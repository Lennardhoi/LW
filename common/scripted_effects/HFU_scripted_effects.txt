update_axis_designers =
{
every_country= {
	limit={
		is_playable_country=yes
	}
	set_variable={factory_count=num_of_military_factories}
	if = {limit={check_variable={factory_count<26}} set_variable={gainfactor=75}}
	else_if={limit={check_variable={factory_count<100}} set_variable={gainfactor=75} add_to_variable={factory_count=-25} divide_variable={factory_count=500} add_to_variable={factory_count=1} divide_variable={factory_count=num_of_military_factories}  multiply_variable={gainfactor=factory_count}}
	else={ set_variable={gainfactor=75} add_to_variable={factory_count=-100} divide_variable={factory_count=200} add_to_variable={factory_count=1.15} divide_variable={factory_count=num_of_military_factories} multiply_variable={gainfactor=factory_count}}
	#add_to_variable={gainfactor=-1}
	every_military_industrial_organization = {
	limit={NOT={OR={
	has_mio_equipment_type = mio_cat_eq_all_carrier
	has_mio_equipment_type = mio_cat_eq_all_cruiser
	has_mio_equipment_type = mio_cat_eq_all_destroyer
	has_mio_equipment_type = mio_cat_eq_all_battleship
	}}
	}
	set_mio_funds_gain_factor = PREV.gainfactor
	}

}
}

sealion_core_defense = {
ENG={
			set_temp_variable= {battalions_ukt = 0 }
						while_loop_effect = {
							limit = {

								meta_trigger={
								text={
								num_battalions_in_states = {
									count > [EQ_LEVEL]
									states = { 116 117 118 119 120 121 123 124 125 126 127 128 129 130 131 132 305 }								
								}
								}
								EQ_LEVEL = "[?battalions_ukt]"
								}
							}
							add_to_temp_variable = { battalions_ukt = 100 }
						}
						if= {
							limit = {


								meta_trigger={
								text={
								num_battalions_in_states = {
									count < [EQ_LEVEL]
									states = { 116 117 118 119 120 121 123 124 125 126 127 128 129 130 131 132 305 }								
								}
								}
								EQ_LEVEL = "[?battalions_ukt]"
								}
							}
							add_to_temp_variable = { battalions_ukt = -100 }
						}
						while_loop_effect = {
							limit = {


								meta_trigger={
								text={
								num_battalions_in_states = {
									count > [EQ_LEVEL]
									states = { 116 117 118 119 120 121 123 124 125 126 127 128 129 130 131 132 305 }								
								}
								}
								EQ_LEVEL = "[?battalions_ukt]"
								}
							}
							add_to_temp_variable = { battalions_ukt = 10 }
						}
						if= {
							limit = {


								meta_trigger={
								text={
								num_battalions_in_states = {
									count < [EQ_LEVEL]
									states = { 116 117 118 119 120 121 123 124 125 126 127 128 129 130 131 132 305 }								
								}
								}
								EQ_LEVEL = "[?battalions_ukt]"
								}
							}
							add_to_temp_variable = { battalions_ukt = -10 }
						}
						while_loop_effect = {
							limit = {


								meta_trigger={
								text={
								num_battalions_in_states = {
									count > [EQ_LEVEL]
									states = { 116 117 118 119 120 121 123 124 125 126 127 128 129 130 131 132 305 }								
								}
								}
								EQ_LEVEL = "[?battalions_ukt]"
								}
							}
							add_to_temp_variable = { battalions_ukt = 1 }
						}
						if= {
							limit = {


								meta_trigger={
								text={
								num_battalions_in_states = {
									count < [EQ_LEVEL]
									states = { 116 117 118 119 120 121 123 124 125 126 127 128 129 130 131 132 305 }								
								}
								}
								EQ_LEVEL = "[?battalions_ukt]"
								}
							}
							add_to_temp_variable = { battalions_ukt = -1 }
						}
						divide_temp_variable={battalions_ukt=200}
						set_variable={ENG.battalions_uk=battalions_ukt}
						
}
}
pow_before_annex= {
hidden_effect = {set_variable ={getting_annexed=1}
every_enemy_country = {
					limit={is_playable_country =yes 
					OR = { NOT = { original_tag = FRA } has_global_flag = fall_of_france } 
					}
refresh_click_effect = yes
}
}
}
refresh_click_effect = { #prevent spam hidden idea for one day
				# Coring List Window
				#add_timed_idea= {idea=pow_refresh days=1}
				clear_array=pow_enemy_countries_casualties
				clear_array=pow_enemy_countries_numbers
				clear_array=pow_enemy_countries
				clear_variable=total_pows
				every_enemy_country = {
					limit={is_playable_country =yes
					OR = { NOT = { original_tag = FRA } has_global_flag = fall_of_france } 
					 }
					add_to_array = {PREV.pow_enemy_countries=THIS }
					set_temp_variable= {casualties_against = 0 }
						while_loop_effect = {
							limit = {


								casualties_inflicted_by = {
									opponent = PREV
									thousands > casualties_against
								}
							}
							add_to_temp_variable = { casualties_against = 1000 }
						}
						if= {
							limit = {

								casualties_inflicted_by = {
									opponent = PREV
									thousands < casualties_against
								}
							}
							add_to_temp_variable = { casualties_against = -1000 }
						}
						while_loop_effect = {
							limit = {

								casualties_inflicted_by = {
									opponent = PREV
									thousands > casualties_against
								}
							}
							add_to_temp_variable = { casualties_against = 100 }
						}
						if= {
							limit = {

								casualties_inflicted_by = {
									opponent = PREV
									thousands < casualties_against
								}
							}
							add_to_temp_variable = { casualties_against = -100 }
						}
						while_loop_effect = {
							limit = {

								casualties_inflicted_by = {
									opponent = PREV
									thousands > casualties_against
								}
							}
							add_to_temp_variable = { casualties_against = 10 }
						}
						if= {
							limit = {

								casualties_inflicted_by = {
									opponent = PREV
									thousands < casualties_against
								}
							}
							add_to_temp_variable = { casualties_against = -10}
						}
						while_loop_effect = {
							limit = {

								casualties_inflicted_by = {
									opponent = PREV
									thousands > casualties_against
								}
							}
							add_to_temp_variable = { casualties_against = 1 }
						}
						if= {
							limit = {

								casualties_inflicted_by = {
									opponent = PREV
									thousands < casualties_against
								}
							}
							#add_to_temp_variable = { casualties_against = -1}
						}
					set_temp_variable={pow_modifier_total=0.25}
					add_to_temp_variable = {pow_modifier_total = pow_modifier}
					multiply_temp_variable = { casualties_against = pow_modifier_total}
					set_temp_variable = { idefix = PREV.pow_enemy_countries_numbers^num}
					add_to_temp_variable = { idefix = 1}
					add_to_array = {PREV.pow_enemy_countries_numbers = idefix}
					if= {
						limit={NOT={has_variable=getting_annexed}}
						
					add_to_array = {PREV.pow_enemy_countries_casualties = casualties_against}
					}
					else = {
						add_to_variable= {PREV.pow_other_sources = casualties_against}
					}
				}


				
				##total casualties calculator
				set_variable= {total_pows = pow_other_sources}
				for_each_loop = {
					array=pow_enemy_countries_casualties
					add_to_variable= {total_pows  = v}
				}
				set_variable = {total_pows_unassigned =total_pows}
				subtract_from_variable = {total_pows_unassigned =total_pows_assigned}
				##total casualties calculator end
			}

show_super_event={
	hidden_effect = {every_country={
			limit={
				is_playable_country=yes
				check_variable = { super_events_enabled > 0 }
			}
			set_variable={super_event=Global.super_event}
		}
	}
}
share_intel_with_allies={
	add_intel = {
		target = PREV
		civilian_intel = 200
		army_intel = 200
		navy_intel = 200
		airforce_intel = 200
	}
	PREV = {
		add_intel = {
			target = PREV
			civilian_intel = 200
			army_intel = 200
			navy_intel = 200
			airforce_intel = 200
		}
	}
}
create_arrays_pacific={
	clear_array=GLOBAL.pacific_states
	every_state={
		limit={OR={state=273 state=294 state= 566 state= 569 state=652 state=405 state=272 state=273 state=275 state=300 state=301 state=302 state=303 state=388 state=450 state=544 state=545 state=546 state=547 state=548 state=549 state=550 state=551 state=552 state=553 state=554 state=555 state=556 state=557 state=559 state=560 state=561 state=563 state=564 state=567 state=568 state=586 state=587 state=588 state=591 state=592 state=603 state=639 state=643 state=644 state=645 state=655 state=656 state=711}}
		add_to_array={GLOBAL.pacific_states=THIS}
	}
	clear_array=GLOBAL.papua_states
	every_state={
		limit={OR={state=713 state=519 state=302 state=712 state=586 state=631 state=300 state=301 state=592 state=568 state=548 state=544 state=545 state=587 state=588 state=566 state=553 state=552}}
		add_to_array={GLOBAL.papua_states=THIS}
	}
}
exploit_occupied_territories={
	random_owned_state={
		limit={NOT={is_core_of=GER} OR = {arms_factory>0 industrial_complex>0}}
		add_compliance = -10
		add_manpower = -25000
		if = {limit={arms_factory>0}
			remove_building = {
				type = arms_factory
				level = 1
			}
			ROOT={random_owned_state={
					limit={is_core_of=GER free_building_slots = { building = arms_factory size > 1 include_locked=yes}}
					add_manpower = 25000
					add_extra_state_shared_building_slots = 1
					add_building_construction = {
						type = arms_factory
						level = 1
						instant_build = yes
					}
				}
			}
		}
		else_if = {limit={industrial_complex>0}
			remove_building = {
				type = industrial_complex
				level = 1
			}
			ROOT={random_owned_state={
					add_manpower = 25000
					limit={NOT={state=28 state=8}is_core_of=GER free_building_slots = { building = industrial_complex size > 1 include_locked=yes}}
					add_extra_state_shared_building_slots = 1
					add_building_construction = {
						type = industrial_complex
						level = 1
						instant_build = yes
					}
				}
				}}
	}
}
update_pacific_war = {
	clear_variable=GLOBAL.pacific_status
	for_each_scope_loop={
		array=GLOBAL.pacific_states
		if={
			limit={is_controlled_by_ENG_or_ally=yes }
			if={
				limit={NOT={OR={state=591 state = 712 state = 713 state=300 state=302 state=303 state=450 state=388 state= 592 state=588 state=273 state=272 state=405}}}
				add_to_variable={GLOBAL.pacific_status=1}
				else_if={
					limit={NOT={OR={state=273 state=272 state=405}}}
					add_to_variable={GLOBAL.pacific_status=5}
				}
				else={
					add_to_variable={GLOBAL.pacific_status=10}
				}
			}
		}
	}
	clear_variable=GLOBAL.papua_status
	for_each_scope_loop={
		array=GLOBAL.papua_states
		if={
			limit={is_controlled_by_ENG_or_ally=no}
			if={
				limit={OR={state=302 state=712 state=713 state=591 state=592 state=301 state=300 state=548 state=586}}
				add_to_variable={GLOBAL.papua_status=5}
				else={
					add_to_variable={GLOBAL.papua_status=1}
				}
			}
		}
	}
	set_variable={JAP.pacific_status=GLOBAL.pacific_status}
	set_variable={AST.papua_status_help=GLOBAL.papua_status}
	subtract_from_variable={JAP.pacific_status=70}
	multiply_variable={JAP.pacific_status=-30}
	divide_variable={JAP.pacific_status=10200}
	multiply_variable={AST.papua_status_help=35}
	divide_variable={AST.papua_status_help=5100}
	set_variable={USA.pacific_status=JAP.pacific_status}
	set_variable={USA.pacific_status_negative=JAP.pacific_status}
	multiply_variable={USA.pacific_status=-1}
	set_variable={JAP.pacific_status_negative=USA.pacific_status}
	set_variable={ENG.pacific_status=USA.pacific_status}
	set_variable={ENG.pacific_status_negative=USA.pacific_status_negative}
	multiply_variable={ENG.pacific_status=0.75}
	multiply_variable={ENG.pacific_status_negative=0.75}
	set_variable={GER.pacific_status=JAP.pacific_status}
	set_variable={AST.papua_status=0.35}
	subtract_from_variable={AST.papua_status=AST.papua_status_help}
	set_variable={AST.pacific_status=AST.papua_status}
	
	if={limit={JAP={has_completed_focus=JAP_korean_guest_workers}} add_to_variable={JAP.pacific_status=0.1}}
	
	 if = {
		limit = {AND={date <1944.1.1 date>1941.1.1}}
		set_variable={Global.pacific_days=GLOBAL.num_days}
		subtract_from_variable={Global.pacific_days=709560}
		set_variable={Global.pacific_days2=Global.pacific_days}
		divide_variable={Global.pacific_days=3650}
		subtract_from_variable={GER.pacific_status=Global.pacific_days}
	}
	if= { 
		limit = {413= {is_controlled_by_GER_or_ally=no}}
		add_to_variable={GER.pacific_status=-0.05}
	}
	if= { 
		limit = {412= {is_controlled_by_GER_or_ally=no}}
		add_to_variable={GER.pacific_status=-0.05}
	}
	if= { 
		limit = {113= {is_controlled_by_GER_or_ally=no}}
		add_to_variable={GER.pacific_status=-0.05}
	}
	if= { 
		limit = {2= {is_controlled_by_GER_or_ally=no}}
		add_to_variable={GER.pacific_status=-0.1}
	}
	set_variable={ITA.imperium_romanum=0.60}
		subtract_from_variable={ITA.imperium_romanum=Global.pacific_days}
	if= { 
		limit = {date<1941.1.1}
		add_to_variable={ITA.imperium_romanum=0.15}
	}
	if= { 
		limit = {ITA={OR={413= {is_controlled_by_GER_or_ally=yes} 415= {is_controlled_by_GER_or_ally=yes} 422= {is_controlled_by_GER_or_ally=yes}  582= {is_controlled_by_GER_or_ally=yes}} NOT={ has_dynamic_modifier = {modifier=imperium_romanum}} date<1941.1.1}}
		ITA={add_dynamic_modifier = {modifier=imperium_romanum}}
	}
	
	if= { 
		limit = {ITA={AND={has_completed_focus=ITA_stab OR={413= {is_controlled_by_GER_or_ally=yes} 415= {is_controlled_by_GER_or_ally=yes} 422= {is_controlled_by_GER_or_ally=yes}  582= {is_controlled_by_GER_or_ally=yes}} NOT={ has_idea = SPA_the_duty_to_work}}}}
		ITA={add_ideas=SPA_the_duty_to_work}
	}
	if= { 
		limit = {ITA={413= {is_controlled_by_GER_or_ally=no} 415= {is_controlled_by_GER_or_ally=no} 422= {is_controlled_by_GER_or_ally=no}  582= {is_controlled_by_GER_or_ally=no}  has_dynamic_modifier = {modifier=imperium_romanum} date<1941.1.1}}
		ITA={remove_dynamic_modifier = {modifier=imperium_romanum}}
	}
	if= { 
		limit = {415= {is_controlled_by_GER_or_ally=no}}
		add_to_variable={ITA.imperium_romanum=-0.1}
	}
	if= { 
		limit = {413= {is_controlled_by_GER_or_ally=no}}
		add_to_variable={ITA.imperium_romanum=-0.1}
	}
	if= { 
		limit = {422= {is_controlled_by_GER_or_ally=no}}
		add_to_variable={ITA.imperium_romanum=-0.1}
	}
	if= { 
		limit = {412= {is_controlled_by_GER_or_ally=no}}
		add_to_variable={ITA.imperium_romanum=-0.10}
	}
	if= { 
		limit = {422= {is_controlled_by_GER_or_ally=no}}
		add_to_variable={ITA.imperium_romanum=-0.05}
	}
	if= { 
		limit = {582= {is_controlled_by_GER_or_ally=no}}
		add_to_variable={ITA.imperium_romanum=-0.05}
	}
	if= { 
		limit = {112= {is_controlled_by_GER_or_ally=no}}
		add_to_variable={ITA.imperium_romanum=-0.05}
	}
	if= { 
		limit = {478= {is_controlled_by_GER_or_ally=no}}
		add_to_variable={ITA.imperium_romanum=-0.05}
	}
}
anti_cross_faction_trade_axis = {
	add_opinion_modifier = {
		target = GER
		modifier = anti_cross_faction_trade
	}
	add_opinion_modifier = {
		target = ITA
		modifier = anti_cross_faction_trade
	}
	add_opinion_modifier = {
		target = ROM
		modifier = anti_cross_faction_trade
	}
	add_opinion_modifier = {
		target = HUN
		modifier = anti_cross_faction_trade
	}
	add_opinion_modifier = {
		target = EFR
		modifier = anti_cross_faction_trade
	}
	add_opinion_modifier = {
		target = BUL
		modifier = anti_cross_faction_trade
	}
	add_opinion_modifier = {
		target = SPR
		modifier = anti_cross_faction_trade
	}
}
anti_cross_faction_trade_allies = {
	add_opinion_modifier = {
		target = USA
		modifier = anti_cross_faction_trade
	}
	add_opinion_modifier = {
		target = ENG
		modifier = anti_cross_faction_trade
	}
	add_opinion_modifier = {
		target = FRA
		modifier = anti_cross_faction_trade
	}
	add_opinion_modifier = {
		target = CAN
		modifier = anti_cross_faction_trade
	}
	add_opinion_modifier = {
		target = SAF
		modifier = anti_cross_faction_trade
	}
	add_opinion_modifier = {
		target = RAJ
		modifier = anti_cross_faction_trade
	}
	add_opinion_modifier = {
		target = AST
		modifier = anti_cross_faction_trade
	}
	add_opinion_modifier = {
		target = NZL
		modifier = anti_cross_faction_trade
	}
}
anti_cross_faction_trade_all = {
	ENG = {
		anti_cross_faction_trade_axis = yes
	}
	FRA = {
		anti_cross_faction_trade_axis = yes
	}
	USA = {
		anti_cross_faction_trade_axis = yes
	}
	CAN = {
		anti_cross_faction_trade_axis = yes
	}
	AST = {
		anti_cross_faction_trade_axis = yes
	}
	NZL = {
		anti_cross_faction_trade_axis = yes
	}
	SAF = {
		anti_cross_faction_trade_axis = yes
	}
	GER = {
		anti_cross_faction_trade_allies = yes
	}
	ITA = {
		anti_cross_faction_trade_allies = yes
	}
	HUN = {
		anti_cross_faction_trade_allies = yes
	}
	BUL = {
		anti_cross_faction_trade_allies = yes
	}
	ROM = {
		anti_cross_faction_trade_allies = yes
	}
	SPR = {
		anti_cross_faction_trade_allies = yes
	}
}
declare_war_on_enemy_faction = {
	if = {
		limit = { NOT = { ROOT={has_war_with = THIS.faction_leader } }}
		set_variable={GER.test1=15}
		ROOT={declare_war_on = { target = PREV.faction_leader type = annex_everything }}
		ROOT_call_all_allies_against_THIS = yes
		THIS_call_all_allies_against_ROOT = yes
	}
}
ROOT_call_allies_both_sides = {
	ROOT_call_all_allies_against_THIS = yes
	THIS_call_all_allies_against_ROOT = yes
}
ROOT_call_all_allies_against_THIS = {
	
	for_each_scope_loop = {
		array = ROOT.faction_members
		if = {
			limit = { NOT = {  original_tag = ROOT}  }
			add_to_war = {
				targeted_alliance = ROOT
				enemy = PREV
			}
		}
	}
}
THIS_call_all_allies_against_ROOT = {
	for_each_scope_loop = {
		array = THIS.faction_members
		if = {
			limit = { NOT = { OR = { AND={original_tag = USA has_war=no} AND={original_tag = FRA NOT={has_global_flag=fall_of_france}} original_tag = PREV} } }
			add_to_war = {
				targeted_alliance = ENG
				enemy = ROOT
			}
		}
	}
}
update_sov_major_city_status = {
SOV={
set_variable={major_city_status=0}
if = {limit={controls_state=212} add_to_variable={major_city_status=5}  }
if = {limit={controls_state=188} add_to_variable={major_city_status=5}  }
if = {limit={controls_state=210} add_to_variable={major_city_status=5}  }
}}
update_academy_weekly ={
every_country = {
					limit={is_playable_country =yes } 
					
set_variable={scaled_weekly_manpower=max_manpower_k}
multiply_variable={scaled_weekly_manpower=0.1}
add_to_variable={scaled_weekly_manpower=2000}
if = {
	limit={has_idea=academy_scholarships_spirit}
	add_to_variable={academy_weekly_training_speed=-0.005}

}
if = {
	limit={has_idea=political_loyalty_spirit}
	add_to_variable={academy_weekly_pp=0.005}

}

if = {
	limit={has_idea=relief_of_command_spirit}
	add_to_variable={academy_experience_gain=0.005}

}
if = {
	limit={has_idea=grand_battleplan_army_spirit}
	add_to_variable={academy_special_forces_capacity=0.5}
	if={limit={is_major=yes}
	add_to_variable={academy_special_forces_capacity=0.5}
	}


}
set_variable={academy_weekly_training_speed_total=modifier@training_time_army_factor}
add_to_variable={academy_weekly_training_speed_total=academy_weekly_training_speed}
if={limit={check_variable={academy_weekly_training_speed_total<-0.90}}
set_variable={academy_weekly_training_speed_result=-0.90}
subtract_from_variable={academy_weekly_training_speed_result=academy_weekly_training_speed_total}
}
else = {
set_variable={academy_weekly_training_speed_result=academy_weekly_training_speed}

}
}
}
initialize_resource_stockpiles={

add_to_array={resource_balance=resource@aluminium}
add_to_array={resource_balance=resource@rubber}
add_to_array={resource_balance=resource@tungsten}
add_to_array={resource_balance=resource@steel}
add_to_array={resource_balance=resource@chromium}

for_each_loop ={
					array=resource_balance
					add_to_array ={resource_stockpile=0}
				}
				for_each_loop ={
					array=resource_balance
					add_to_array ={resource_stockpile_capacity_base=10000}
				}
				for_each_loop ={
					array=resource_balance
					add_to_array ={resource_stockpile_capacity_silos=0}
				}
				for_each_loop ={
					array=resource_balance
					add_to_array ={resource_stockpile_capacity=10000}
				}
				for_each_loop ={
					array=resource_balance
					add_to_array ={resource_stockpile_output=0}
				}
				for_each_loop ={
					array=resource_balance
					add_to_array ={resource_stockpile_output_unmod=0}
				}
}
stop_resource_stockpile={

set_variable={resource_stockpile_output^0=0}
set_variable={resource_stockpile_output^1=0}
set_variable={resource_stockpile_output^2=0}
set_variable={resource_stockpile_output^3=0}
set_variable={resource_stockpile_output^4=0}
set_variable={resource_stockpile_output_unmod^0=0}
set_variable={resource_stockpile_output_unmod^1=0}
set_variable={resource_stockpile_output_unmod^2=0}
set_variable={resource_stockpile_output_unmod^3=0}
set_variable={resource_stockpile_output_unmod^4=0}

}
calculate_resource_stockpile={
clear_variable=stockpile_stopped
						#log = "date [?Global.date.GetDateString]"
						if = {limit={OR={fuel_silo>silos fuel_silo<silos}}
						set_temp_variable={silos=0}
						while_loop_effect = {
							limit = {

								fuel_silo>silos
							}
							add_to_temp_variable = { silos = 10 }
						}
						if= {
							limit = {

								fuel_silo<silos
							}
							add_to_temp_variable = { silos = -10 }
						}
						while_loop_effect = {
							limit = {

								fuel_silo>silos
							}
							add_to_temp_variable = { silos = 1 }
						}
						if= {
							limit = {

								fuel_silo<silos
							}
							add_to_temp_variable = { silos = -1 }
							#add_to_temp_variable = { casualties_against = -1}
						}
			}
			for_each_loop ={
					array=resource_stockpile_capacity_base
					value=v
					index=i
					set_temp_variable={x=silos}
					multiply_temp_variable={x=5000}
					add_to_temp_variable={x=v}
					set_variable={resource_stockpile_capacity^i=x}
				}
set_variable={resource_balance^0=resource@aluminium}
set_variable={resource_balance^1=resource@rubber}
set_variable={resource_balance^2=resource@tungsten}
#log = "resource balance tungsten [?resource_balance^2] [?Global.date.GetDateString]"
set_variable={resource_balance^3=resource@steel}
set_variable={resource_balance^4=resource@chromium}

for_each_loop ={
					array=resource_balance
					value=v
					index=i
					set_temp_variable={x=1}
					set_temp_variable={xr=1}
					add_to_temp_variable={xr=modifier@local_resources_factor}
					set_temp_variable={xb=1}
					subtract_from_temp_variable={xb=modifier@min_export}
					multiply_temp_variable={x=xr}
					multiply_temp_variable={x=xb}
					set_temp_variable={y=x}
					multiply_temp_variable={y=resource_stockpile_output^i}#derzeitiger stockpile output
					#if= {limit={check_variable={i=2}}
					#log = " [?i] y ist kleiner als 0  [?y] und v [?v][?Global.date.GetDateString]"
					#}
					subtract_from_temp_variable={y=v}
					
					#multiply_temp_variable={y=-1}
					#log= "Calc need y [?y]"#v=104
					#log= "v [?v]"#y=11.8
					if={ limit={check_variable={y<0}}
					set_variable={resource_stockpile_output^i=0}
					}#
					else_if={
					limit={check_variable={y>0} NOT={ check_variable={v>-1} check_variable={resource_stockpile^i=0}}}
					set_temp_variable={y=v}
					multiply_temp_variable={y=-1}
					divide_temp_variable={y=x}
					
					#if= {limit={check_variable={i=2}}
					#log = "[?i]Bedarf erhöhen um y [?y] und x [?x][?Global.date.GetDateString]"
					#}
					add_to_variable={resource_stockpile_output^i=y}
					}
					else_if={
					limit={check_variable={y>0} NOT={ check_variable={v<-1} check_variable={resource_stockpile^i=0}}}
					
					#multiply_temp_variable={y=-1}
					set_temp_variable={y=v}
					divide_temp_variable={y=x}
					if= {limit={check_variable={i=2}}
					#log = "[?i]Bedarf senken um y [?y] und x [?x][?Global.date.GetDateString]"
					}
					subtract_from_variable={resource_stockpile_output^i=y}
					}
					clamp_variable ={
					var=resource_stockpile_output^i
						min=0
						max=resource_stockpile^i
						}
					set_variable={resource_stockpile_output_unmod^i=resource_stockpile_output^i}
					set_variable={test123=x}
					multiply_variable={resource_stockpile_output_unmod^i=xr}
					
					
				
				}
#remove_dynamic_modifier = {modifier=Stockpile}
add_dynamic_modifier = {modifier=Stockpile}
#force_update_dynamic_modifier = yes	
}

update_stockpile={
	for_each_loop ={
					array=resource_balance
					value=v
					index=i
					subtract_from_variable={resource_stockpile^i=resource_stockpile_output_unmod^i}
					if={ limit={check_variable={resource_stockpile_output^i=0}}
						
						add_to_variable={resource_stockpile^i=v}
					}
					clamp_variable={
						var=resource_stockpile^i
						min=0
						max=resource_stockpile_capacity^i
					}
	}
}
update_relative_production_efficiency_factor = {
					set_temp_variable={xr=0.5}
					add_to_temp_variable={xr=modifier@production_factory_max_efficiency_factor}
					subtract_from_temp_variable={xr=relative_production_efficiency_factor_actual}
					set_variable={relative_production_efficiency_factor_actual=relative_production_efficiency_factor}
					multiply_variable={relative_production_efficiency_factor_actual=xr}
					if={
						limit= {check_variable={relative_production_efficiency_factor_actual=0}}
						remove_dynamic_modifier = {
    							modifier = relative_production_efficiency
						}
					}
					else={
						add_dynamic_modifier = {
    							modifier = relative_production_efficiency
						}
					}


}